{"version":3,"sources":["components/NavBar/index.js","components/Header/index.js","components/Wrapper/index.js","pages/NoMatch.js","components/Form/index.js","utils/API.js","components/Results/index.js","pages/Search.js","pages/Saved.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","className","to","window","location","pathname","Header","Wrapper","props","NoMatch","Form","htmlFor","onChange","handleInputChange","value","search","name","type","placeholder","id","onClick","handleFormSubmit","getBook","query","axios","get","deleteBook","delete","then","result","data","saveBook","bookData","post","savedBooks","Results","state","handleSave","book","map","_id","includes","API","deletedBook","setState","filter","catch","err","console","error","savedBook","concat","this","books","length","key","alt","title","src","image","authors","description","href","link","target","Component","Search","makeBook","volumeInfo","imageLinks","thumbnail","previewLink","searchBook","res","items","event","preventDefault","React","Saved","App","NavBar","exact","path","component","Boolean","hostname","match","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f8463efc.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./style.css\";\r\n\r\n\r\nfunction Navbar() {\r\n    return (\r\n\r\n\r\n        <nav className=\"navbar navbar-expand-lg text-light\">\r\n            <div className=\"container\">\r\n                <Link className=\"navbar-brand\" to=\"/\">Google Books</Link>\r\n                <ul className=\"navbar-nav\">\r\n                    <li className=\"nav-item\">\r\n                        <Link\r\n                            to=\"/search\"\r\n                            className={window.location.pathname === \"/search\" ? \"nav-link active\" : \"nav-link\"}\r\n                        > Search</Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <Link\r\n                            to=\"/saved\"\r\n                            className={window.location.pathname === \"/saved\" ? \"nav-link active\" : \"nav-link\"}\r\n                        >Saved</Link>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n\r\n    );\r\n}\r\n\r\nexport default Navbar;","import React from \"react\";\r\nimport style from \"./style.css\";\r\n\r\nfunction Header() {\r\n    return (\r\n        <div className=\"jumbotron text-center\">\r\n            <div className=\"container text-light\">\r\n                <h1>Google Books Search</h1>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header;","import React from \"react\";\r\n\r\nfunction Wrapper(props) {\r\n  return <main className=\"wrapper\" {...props} />;\r\n}\r\n\r\nexport default Wrapper;","import React from \"react\";\r\nimport Header from \"../components/Header\";\r\n\r\nfunction NoMatch() {\r\n  return (\r\n    <div>\r\n          <Header>\r\n            <h1>404 Page Not Found</h1>\r\n          </Header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NoMatch;","import React from \"react\";\r\n\r\nfunction Form(props){\r\nreturn (\r\n  <div className=\"container\">\r\n  <form>\r\n    <div className=\"form-group\">\r\n      <label htmlFor=\"search\"><h2>Search and Save Books</h2></label>\r\n      <input\r\n        onChange={props.handleInputChange}\r\n        value={props.search}\r\n        name=\"search\"\r\n        type=\"text\"\r\n        className=\"form-control\"\r\n        placeholder=\"Search a Book\"\r\n        id=\"search\"\r\n      />\r\n      <button onClick={props.handleFormSubmit} className=\"btn btn-dark mt-3 mb-5\">\r\n        Search\r\n        </button>\r\n    </div>\r\n  </form>\r\n  </div>\r\n);\r\n}\r\n\r\nexport default Form;","import axios from \"axios\";\r\n\r\n// axios call to google books api\r\nexport default {\r\n  getBook: function (query) {\r\n    return axios.get(`https://www.googleapis.com/books/v1/volumes?q=${query}`);\r\n  },\r\n  // Deletes the book with the given id\r\n  deleteBook: function (id) {\r\n    return axios.delete(\"/api/books/\" + id).then(result => result.data);\r\n  },\r\n  // Saves a book to the database\r\n  saveBook: function (bookData) {\r\n    return axios.post(\"/api/books\", bookData).then(result => result.data);\r\n  },\r\n  // Get the saved a books from the database\r\n  savedBooks: function () {\r\n    return axios.get(\"/api/books\").then(result => result.data);\r\n  }\r\n};","import React, { Component } from \"react\";\r\nimport API from \"../../utils/API\";\r\n\r\nclass Results extends Component {\r\n\r\n    state = {\r\n        savedBooks: [],\r\n    }\r\n\r\n    componentDidMount() {\r\n        API.savedBooks()\r\n            .then(savedBooks => this.setState({ savedBooks: savedBooks }))\r\n            .catch(err => console.error(err));\r\n    }\r\n\r\n    handleSave = book => {\r\n\r\n        if (this.state.savedBooks.map(book => book._id).includes(book._id)) {\r\n            API.deleteBook(book._id)\r\n                .then(deletedBook => this.setState({ savedBooks: this.state.savedBooks.filter(book => book._id !== deletedBook._id) }))\r\n                .catch(err => console.error(err));\r\n        } else {\r\n            API.saveBook(book)\r\n                .then(savedBook => this.setState({ savedBooks: this.state.savedBooks.concat([savedBook]) }))\r\n                .catch(err => console.error(err));\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {!this.props.books.length ? (\r\n                    <h1 className=\"text-center\">No Results</h1>\r\n                ) : (\r\n                        <div>\r\n                            {this.props.books.map(result => (\r\n                                <div className=\"card mb-3\" key={result._id}>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-2\">\r\n                                            <img alt={result.title} className=\"img-fluid\" src={result.image} />\r\n                                        </div>\r\n                                        <div className=\"col-md-10\">\r\n                                            <div className=\"card-body\">\r\n                                                <h5 className=\"card-title\">{result.title} by {result.authors}</h5>\r\n                                                <p className=\"card-text\">{result.description}</p>\r\n                                                <div>\r\n                                                    <a href={result.link} className=\"btn badge-pill btn-outline-dark mt-3\" target=\"_blank\" >View</a>\r\n                                                    <button onClick={() => this.handleSave(result)} className=\"btn badge-pill btn-outline-warning mt-3 ml-3\" >\r\n                                                        {this.state.savedBooks.map(book => book._id).includes(result._id) ? \"Unsave\" : \"Save\"}\r\n                                                    </button>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                    )}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Results;","import React from \"react\";\r\nimport Form from \"../components/Form\";\r\nimport Results from \"../components/Results\";\r\nimport API from \"../utils/API\";\r\n\r\nclass Search extends React.Component {\r\n    state = {\r\n        value: \"\",\r\n        books: []\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.searchBook();\r\n    }\r\n\r\n    makeBook = bookData => {\r\n        return {\r\n            _id: bookData.id,\r\n            title: bookData.volumeInfo.title,\r\n            authors: bookData.volumeInfo.authors,\r\n            description: bookData.volumeInfo.description,\r\n            image: bookData.volumeInfo.imageLinks.thumbnail,\r\n            link: bookData.volumeInfo.previewLink\r\n        }\r\n    }\r\n\r\n    searchBook = query => {\r\n        API.getBook(query)\r\n            .then(res => this.setState({ books: res.data.items.map(bookData => this.makeBook(bookData)) }))\r\n            .catch(err => console.error(err));\r\n    };\r\n\r\n    handleInputChange = event => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    };\r\n\r\n    handleFormSubmit = event => {\r\n        event.preventDefault();\r\n        this.searchBook(this.state.search);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Form\r\n                    search={this.state.search}\r\n                    handleInputChange={this.handleInputChange}\r\n                    handleFormSubmit={this.handleFormSubmit}\r\n                />\r\n                <div className=\"container\">\r\n                    <h2>Results</h2>\r\n                    <Results books={this.state.books} />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Search;","import React, { Component } from \"react\";\r\nimport API from \"../utils/API\";\r\nimport Results from \"../components/Results\";\r\n\r\nclass Saved extends Component {\r\n    state = {\r\n        savedBooks: [],\r\n    }\r\n\r\n    componentDidMount() {\r\n        API.savedBooks()\r\n            .then(savedBooks => this.setState({ savedBooks: savedBooks }))\r\n            .catch(err => console.error(err));\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <h2>Saved books</h2>\r\n                <Results books={this.state.savedBooks} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Saved;","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport NavBar from \"./components/NavBar\";\nimport Header from \"./components/Header\";\nimport Wrapper from \"./components/Wrapper\";\n\nimport NoMatch from \"./pages/NoMatch\";\nimport Search from \"./pages/Search\";\nimport Saved from \"./pages/Saved\";\n\nimport \"./App.css\";\n\nclass App extends Component {\n \n  render() {\n    return (\n      <Router>\n        <div>\n          <NavBar />\n          <Header />\n          <Wrapper>\n            <Route exact path=\"/\" component={Search} />\n            <Route exact path=\"/search\" component={Search} />\n            <Route exact path=\"/saved\" component={Saved} />\n            <Route exact path=\"/noMatch\" component={NoMatch} />\n          </Wrapper>\n        </div>\n      </Router>\n    )\n  };\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}